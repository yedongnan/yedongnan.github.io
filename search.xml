<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hyperlydger共识算法：Solo和Kafka]]></title>
    <url>%2FHyperlydger%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95%EF%BC%9ASolo%E5%92%8CKafka.html</url>
    <content type="text"><![CDATA[Hyperledger Fabric目前支持三种共识算法，分别是Solo，Kafka还有SBFT，SBFT还在还只存在于计划当中，下面以Solo和Kafka进行简单介绍。 Solo是一种单中心化的共识机制，只用于Fabric开始使用时作测试用。只有一个ordering 节点向所有的客户端提供排序服务，可以说Solo称不上是“共识”，仅仅作为fabric的一种辅助支撑存在。一个典型的Solo排序服务如下：客户端通过gRPC与orderer节点建立连接，连接建立orderer收到信息后存入账簿ledger，客户端通过deliver接口获取账簿信息。 Kafka是一种集群时序服务，支持分布式系统中存在部分失效节点，但不能容忍系统中存在恶意节点。 Fabric 1.0的Kafka排序服务的基本工作原理是这样的： Client向排序服务节点OSN发送交易； OSN节点对交易进行相关检查，符合条件之后会将交易发送给Kafka集群； OSN节点从Kafka集群拉取交易消息并对交易消息进行打包将打包之后的交易batch写入本地数据库； OSN节点按客户端Deliver请求从本地数据库读取区块返回； 分区，有序，容错是kafka的三个特性。这里的有序是说在一个分区中的消息被某一个消费者消费时，消息是有序的。换句话说，也就是说对于一个消费者来说，在一个分区内的所有消息是有序的。但是不保证不同分区的数据是有序的。 也正由于这三个特性，可以使用kafka来作为一种“简单粗暴”的共识算法。这里再次强调下共识的定义，所谓的共识是指：在一个时间段内对事物的前后顺序达成共识的一种算法。 kafka的分区有序就保证了kafka可以作为一种共识算法。从工程角度，这种共识算法的安全性较低。但是由于Fabric引入了比较强的身份管理机制，在一定程度上加强了整个系统的安全等级。]]></content>
      <tags>
        <tag>区块链 Hyperledger</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《未来简史》]]></title>
    <url>%2F%E8%AF%BB%E3%80%8A%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E3%80%8B.html</url>
    <content type="text"><![CDATA[这本书其实算是《人类简史》的续本，以当前智人科技之发展，思考未来智人的命运，论述娓娓道来，论点主要集中在三处：智人永生、永远快乐和从智人到智神。 人类自从认知革命以后，直到最近400年才最终解决困扰人类的三大难题：战争、瘟疫以及饥荒。历史上的饥荒饿死的人不计其数，天灾、人祸导致的饿殍遍野困扰了农业革命之后的人类上千年。瘟疫也是如此，著名的例子如直到20世纪才被人类灭绝的天花，还有中世纪横行欧洲的黑死病，都是悬在人类的头上的黑煞星。战争所带来的人口减少一点不亚于前两者，每一个大帝国的崛起与衰亡都伴随着无数人的无家可归和尸骸遍野。 靠着科技革命与资本主义兴起所带来的越做越大的蛋糕。虽然富人永远分到了最多最大的部分，但穷人的生活水准确实也在逐步提高。科技革命将生产力提高到前所未有的水准，资本主义精神鼓励商人将利润投入再生产，扩大规模，再去寻找广袤的市场。沿着逐利商人的船队，资本主义与科技革命投射到了全球，任何一个被卷入的民族要么被西方征服，成为其倾销商品的殖民地，要么奋起直追，参与到全球化蛋糕的生产与分享过程中。 科技的进步为智人带来了切实的显而易见的好处，将智人从辛苦的农业社会解脱出来，自20世纪的两次世界大战以来，人类甚至已经接近永久性的解决了困扰人类数千年的难题：饥荒、瘟疫以及大的战争，虽然地区冲突持续不断。 现阶段，随着生物科技、人工智能、大数据为代表的科技日益成熟时，有三个议题摆上了人类的讨论桌：永生、永远快乐以及从智人到智神。这三个议题显而易见，对于拥有强大科技的智人来说。人类的平均寿命近百年来呈现逐步上升的趋势，永生这个自古以来人类梦寐以求的理想似乎终于看见了曙光，我们可以深入到我们的基因层面防治变异的基因，纳米机器人的研究又让我们体内可以出现数百万个清道夫，仿生科技、脑机接口等科技的蓬勃发展又让我们对自己的身体和意识有了更深入的理解，人工智能的突飞猛进又有可能让我们了解到生物可能只是一种有机算法，到头来可能发现和无机算法并没有什么两样，进而威胁到现代社会的基石，即人文主义。 人文主义的说法其实是相对于宗教而言的。从狩猎采集年代起，人生而为人的意义一只来自于一个外于其自身的个体，如神、上帝、佛陀以及安拉和她的先知等。每个宗教都有着神圣的教义，赋予各色人等以生存的意义，做好事上天堂，作恶便要下地狱，每个人要根据神的安排来做出贡献。现代科技将宗教做出的事实申明逐一击破，仅留下伦理判断这一领域拿宗教没有办法，因为无法证明。人文主义在这股潮流中崛起，人文主义讲求的是回到自己的初心，聆听自己的内心，去除喧嚣，不受外在所左右，人文主义推崇自由、平等等，相信每个个体的独特价值与独一无二的个人体验，所以有自由主义的市场经济，自由主义的民主选民，相信每一个个体独立的判断。人文主义是现代文明的基石，但科技革命将有可能颠覆这一切。科技已经证明，这一切可能都是假象，人的体验及意志可以被操控，意识与智慧可能并非不可分离，人类引以为傲的领域逐一被人工智能击败，而人工智能的发展在未来可能会摆脱人类的控制。如果生物最终被证明也仅仅是一种算法的话，无机的算法就有可能走到人类的前头，直到我们再也看不懂这一头怪兽的思维方式，就像我们看待地球上的其他生物一样。机器可能并不是想灭绝人类，只是忠实的执行人所给他赋予的任务，举个例子，假如哪天我们让机器算出精确的π值，机器为了得到精确的数值，占领地球，向外太空殖民，耗尽整个星系的资源只为算出尽可能正确的π值，到这个时候，人类将何以自处？]]></content>
  </entry>
  <entry>
    <title><![CDATA[读《人类简史》]]></title>
    <url>%2F%E8%AF%BB%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2.html</url>
    <content type="text"><![CDATA[从7万年前的狩猎采集阶段的智人一直写道智人末日，人类简史摆开了一幅巨大的轮廓，将已知的人类历史试图写尽写透，智人从哪里来，将要走到哪里，智人甚至已经摆脱了大自然的自然选择过程，可以进行智能设计(生物工程、仿生工程、无机化)，可以自己选择大自然的演进，甚至是改变智人自己，演变而成超人类。 7万年前的狩猎采集时期，整个智人还都生活在东非大草原上，只是整个自然生态的一环而已，而且不是生态链的顶端。其他的大陆生活着其他的如尼安德特人、东亚直立人等，单纯论武力值方面，智人完全不是尼安德特人的对手，到最后却是智人将地球上的其他人种全部灭绝并站上了食物链的顶端扩展到了全球，智人靠的是什么？靠的是大规模协作，智人组成了一个共同体，向北扩展灭绝了零散的尼安德特人，向东扩张灭绝了零散的东亚直立人，并在冰河期越过白令海峡灭绝了美洲的当地人种，占领了全世界。而智人达成协作的前提是智人有了三样有别于其他人种的特质，语言、八卦、虚构的力量。智人的脑容量要比其他人种要大，与相比其他生物，人类的语言更丰富，表达的信息也更全面，八卦则使群落每个人之间增进了感情和连接了互相之间的纽带，虚构例如虚构一个故事，一个神等，让智人有了共同的寄托，三种特质结合让人类跨过了150这个极限让智人在严酷的自然选择过程中以一个集体的力量去生存和发展。 智人第二个飞跃是从狩猎采集到农业社会。相比于农业社会，个人在狩猎采集阶段活动的范围更大，食物种类更加多元，相比于农民日出而作，日落而息，被锁死在土地上的作息习惯，狩猎采集的智人可能幸福感更强，更自由。但可能是在历史的某个阶段，某些智人突然就开始逐水而居起来，驯化起小麦、稻米等，由于从事农业能养活的人突然多了起来，这个部落相比于狩猎采集的智人武力更强，有了更强的竞争力，摆在其他智人面前的选择无非要么继续狩猎采集，但得迁移到远离这些农业人口的地方，要么加入他们，自己也拿起锄头。变身农业社会之后，整个社会结构为之一变，由于土地成了最重要的资产，人口也比以前有了大规模的增长，智人之间的冲突演变成对于土地的争夺，水源的争夺等，这个时候，更加强有力的组织方式，帝国，开始登上历史舞台。 帝国的统治范围往往生活着多个民族，疆域往往都随时处于变化当中，帝国的诞生与维系，推动着统治工具即政治、经济、社会等制度的演进发展，推动了宗教的发展，并最终推动了人类的融合统一，小帝国最终演化成大帝国。在数千年的干戈当中，不同区域的智人开始共享同一套价值体系，科学革命开始在全球扩散，资本主义的自由市场如今被奉为圭臬，智人相比于历史上的任何时期从未如此接近彼此。 本书最后留下的三个疑问：智人在最近200年的发展已经带来家庭的社群的崩溃，人类作为一个群体将何去何从？究竟是现在的人更快乐，还是处于狩猎采集阶段的智人更快乐，快乐又该如何定义？智人这一波的科技革命将会把智人带向何方？]]></content>
  </entry>
  <entry>
    <title><![CDATA[区块链共识算法：实用拜占庭容错机制PBFT]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95%EF%BC%9A%E5%AE%9E%E7%94%A8%E6%8B%9C%E5%8D%A0%E5%BA%AD%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6PBFT.html</url>
    <content type="text"><![CDATA[共识机制是区块链的核心组成部分，以POW、POS以及DPOS等为代表的共识机制运行需要以代币为基础，即需要发行各自的货币体系来构成各自网络运行的激励机制，而在于节点已经有一定的互信基础且不需要靠代币来支撑整个网络的区块链，传统的共识算法如PBFT、PAXOS、RAFT则派上了用场，PAXOS则是第一个被证明的共识算法。本文限于篇幅，PAXOS和RAFT留待后续。 实用拜占庭容错机制PBFT PBFT算法由Miguel Castro和 Barbara Liskov 1999年提出，初衷是为解决分布式系统中达成一致性的问题，与区块链共识机制的目标重合，其主要特点是网络具有高度容错性，在一个有3f + 1个节点的网络中，失效节点数为f，网络依然能够正常运行，容错率接近33%。目前，中国ChinaLedger 联盟和HyperLedger联盟就在研究探讨PBFT的实际应用。 算法首先需要引入视图(View)和验证节点(replica)的概念，replica包含主节点和备份节点。主节点(primary)依据某个公式选取，选取好之后，其他replica节点就成为备份(backups)节点。主节点有效时是表示处于同一幅视图当中，当主节点失效时，备份节点检测到之后需要通过timeout机制启动视图更换（view change）过程，选举新的主节点。整个算法流程如下：首先，由某个客户端向主节点发起服务请求，主节点将请求分发给所有备份节点，备份节点处理完后再全部回馈给客户端，客户端只要收到f + 1个节点回馈的相同结果即为算法的最终结果。 具体实现流程分为三阶段协议（three-phase protocol），即预准备（pre-prepare）、准备(prepare)和确认(commit)。 预准备（pre-prepare）阶段：主节点收到请求后，给请求编一个序号n，然后向所有备份节点发送信息，信息格式为&lt;,m&gt;，v是视图编号，m是客户端发送的请求信息，d是m的摘要。如果该信息满足该备份节点设立的条件(如检查视图编号，序号n是否处于一个合理区间， m是否之前收到过等)，则该节点进入准备阶段。备份节点设立某些条件的原因是主节点有可能是失效节点，它可能会给不同的请求编上相同的序号，或者不去分配序号，或者让相邻的序号不连续： 准备(prepare)阶段：进入准备阶段的节点向所有replica节点发送准备消息，i是节点编号。经过这两个阶段，每个节点都收到了两条信息，每个replica节点验证预准备和准备消息的一致性，即验证视图编号v、消息序号n和摘要d是否一致，如果一致，进入下一个阶段。 确认(commit)阶段：进入这一阶段，某个replica节点向其他replica节点发送信息，信息格式。节点收到其他replica节点确认信息后进行验证，仍是验证视图编号v、消息序号n和摘要d是否一致，一致则验证通过。当replica节点收到2f + 1个(包含自身) 验证通过的确认信息后，向客户端反馈执行结果，并将结果写入区块中，即写入区块前，至少有2f + 1个(包含自身)节点达成了共识。 存在一个确认(commit)阶段的缘由在于，单个replica节点收到2f + 1个(包括自己) PREPARE信息并不能保证自己发出的PREPARE信息已被其他replica节点接收到，即其他节点不一定已经准备好Prepared，需要一个确认(commit)阶段来对此进行验证。 如果连续执行了K条请求，在第K条请求执行完时，向全网发起广播，告诉其他replica节点它已经将这K条执行完毕，要是都反馈说这K条我们也执行完毕了，那就可以删除这K条的信息了，接下来再执行K条，完成后再发起一次广播，即每隔K条发起一次全网共识，这个概念叫checkpoint，每隔K条去征求一下大家的意见，要是获得了大多数的认同，就形成了一个 stable checkpoint（记录在第K条的编号），这一机制被称为“Garbage Collection”。 PBFT是一种静态共识， 在得知有限共识节点的情况可以适用。对于私有链和联盟链，如果节点数不大(不大于100)，可采用PBFT形成共识，公有链拥有大量且不断动态变化的节点网络，PBFT由于其封闭性（节点数目提前确定并互相联通）和高性能开销(O(N^2)的消息量)，以及复杂的view change算法和开销，用PBFT效率太低。 使用PBFT算法还需要注意的一点是，其不能很好的存贮其交易信息，一些失效的副本可能会导致信息外泄，应有相应应对机制。 我的BTC地址：1K8ni4mnQn7VjFZKjHJHLPWZ55owG9J1jd]]></content>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[区块链共识机制之权益证明POS和委托权益证明DPOS]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6%E4%B9%8B%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8EPOS%E5%92%8C%E5%A7%94%E6%89%98%E6%9D%83%E7%9B%8A%E8%AF%81%E6%98%8EDPOS.html</url>
    <content type="text"><![CDATA[工作量证明算法作为区块链第一个也是目前经受住足够实践检验的一个共识机制，解决的是分布式系统交易信息一致性的问题，在一个去中心化的网络中构建了彼此不信任节点的信任机制，也是比特币成功应用的关键技术环节。 经过几年的实际运转，这一算法的弊端也显露出来，比特币网络每秒完成600万亿次SHA256运算，消耗了大量的电力资源，而最终这些计算没有任何实际或科学价值，这些运算存在的唯一目的是用来解决工作量证明问题。另外一个现实的威胁便是算力集中，工作量证明本质上是利用穷举法找出符合规定条件的哈希值的过程，算力越强，获得记账权(即挖到矿)的可能性便越高。一开始是最早利用显卡挖矿的人，后来是利用FPGA矿机挖矿的人，再后来是利用ASIC专用芯片挖矿的人，现在就是不断制造出更好的ASIC挖矿的人，另外还有“矿工”节点联合起来组成矿池，如Ghash等都在试图不断集中算力。Ghash 2014年曾经发表声明，将在今后确保不超过40%的全网算力，这类自律声明是对比特币节点间去信任机制的莫大讽刺。 比特币自诞生以来，人们便开始尝试其他除了工作量证明算法之外的其他共识机制，如具有代表性的权益证明POS、委托权益证明DPOS、拜占庭容错机制（BFT）及实用拜占庭容错机制（PBFT）等，下面将主要介绍POS和DPOS，BFT和PBFT留待下一篇。 权益证明POS POS是一类共识算法，或者说是一类共识算法的设计思想，而不是一个，最早采用POS的是Peercoin。Peercoin是2012年8月，一个化名Sunny King的极客推出的一类加密货币，采用工作量证明机制+权益证明机制，首次将权益证明机制引入了加密货币。Peercoin引入了“币龄”的概念，每个币每天产生1币龄，比如你持有100个币，总共持有了30天，那么，此时你的币龄就为3000。当一个新的区块产生时，其他想获得记账权的节点同比特币也需要计算哈希值，得出满足条件哈希值的难易与难度值有关，这个难度值这里与币龄成反比，即你的币龄越大，得出符合条件的哈希值的概率就越大，同时你的币龄被清空，记账后系统会给予你相应“利息”，你每被清空365币龄，获得利息为：3000 * 利率 / 365，Peercoin的利率为1%，即0.08个币。 可以看出，在POS机制下，持有币越多，越容易获得记账权，接近于赢家通吃的感觉，但持有的币越多，越接近于一个诚实的节点，因为破坏整个网络带来的损失也越大。Peercoin的POS机制有一个漏洞，对于不持有币的人而言，他们本来就没什么收益，所以一些恶意攻击对于他们则是无损失的，这就是Nothing-at-stake attack（无利益攻击）。后续的比较成功的POS都引入了对付这种攻击的机制。 以太坊系统的目标是在今年引入权益证明，即Casper。在权益证明共识机制之下，用户将能够在以太坊网络拥有“币权”。用户如果诚实行事并确认了合法交易，将获得与其股权成比的利息；如果恶意行事并试图网络中作弊，就会失去其权益。 委托权益证明DPOS 委托权益证明DPOS是POS的变种，运用DPOS的典型如比特股等，其基本原理在于全网投票选出101个节点代行记账权限，这些代表节点的权限完全一致。代表节点轮流记账，可以选择创造区块或不创造区块。但他们无法改变交易的详情，恶意或者迟到的代表节点的行为也会被公之于众，那么网络可能将他们简单快速地投票驱逐出去。被驱逐出去的代表节点将会失去他们记账权限，以及对应的收入。 DPOS作为是一种弱中心化的共识机制，保留了一些中心化系统的关键优势，如交易速度等(每个块的时间为10秒，一笔交易在得到6-10个确认后大概1分钟，一个完整的101个块的周期大概仅仅需要16分钟)，但每个持币者都有能力决定哪些节点可以被信任，并且事实上，代表节点会主动降低自己的收入来赢得更多投票，剩下的收入会作为股息，支付给所有的比特股持有人。DPOS有点类似于代议制民主及股份公司董事会制度，都是一种精英制度，但其身份受制于下面的民众，在DPOS中，币的持有者至少有权决定代表节点—或者说矿工的身份。 我的BTC地址：1K8ni4mnQn7VjFZKjHJHLPWZ55owG9J1jd]]></content>
  </entry>
  <entry>
    <title><![CDATA[区块链的共识机制之工作量证明机制]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6%E4%B9%8B%E5%B7%A5%E4%BD%9C%E9%87%8F%E8%AF%81%E6%98%8E%E6%9C%BA%E5%88%B6.html</url>
    <content type="text"><![CDATA[区块链是比特币的底层技术，而比特币本质上是一种数字货币，它和其它运行于互联网的货币形式不同之处在于，其他货币都存在一个中心化的银行等机构为货币的支付效力作保证，而比特币则没有这样一个机构，比特币网络中的每个节点都是平等的，而这又如何确保网络中的每一笔交易是可信的呢？例如，张三支付给李四1个比特币，如何确保张三钱包里确实少了1个比特币，而不会仅仅给了李四一个复制品？ 比特币作为一种货币形式已经稳定运行了9年，解决上述问题的一个核心机制就是区块链的共识机制，其实现形式是一种被称为工作量证明POW的算法。 比特币网络中的每一笔交易都会向全网进行广播，网络中的其他节点将会对此进行验证和记录，验证主要是检索整个账本看这笔交易的支付方是否有足够的比特币用于支付。为鼓励其他节点进行记录，获得记账权的节点将会获得交易费和系统的奖励(初始50个比特币，每四年减半)，各个节点争夺记账权的过程也被称为挖矿。“矿工”节点将会收集固定时间内的所有交易并试图创建新区块，任何试图添加新区块的节点必须提供相应“证明”。为了生成“证明”，“矿工”节点需要通过多轮哈希函数来消化这些交易信息，哈希函数是一种计算过程，它能够输入任意长度的数据块，并生成一条固定长度且无特定含义的，由字母以及数字组成的字符串——即哈希值。为了使这一过程更为困难，区块链中还要求所产生的哈希值以一定数量的零作为开头，零的个数取决于网络的难度值，系统会根据网络的实际算力自动调节这个难度值(需根据最近2016个块的耗费时间来调整难度值)，从而确保每十分钟产生一个新区快。其中的难点在于，对于给定的交易信息数据快，其哈希值无法提前预知，只能通过计算出结果进行比对得出，通过在数据块中加入一个随机数，通过大量的反复计算，得出想对应的哈希值结果。当某个“矿工”节点得出一个合理的哈希值，说明该节点确实经过了大量的尝试计算。当一个有效区块被创造出来后，“矿工”节点将会向全网进行广播，其他矿工将核对确认这些账目，交易达到6个确认以上就成功记录在案了。别的“矿工”虽没算出来，但他们很容易验证广播来的账本是否正确。有一个形象的例子：假如你拥有一把需要钥匙才能关上的锁，同时还拥有大量可供使用的钥匙，但不知道哪一把能够与该锁相匹配，则必须一一尝试。当最终找到正确的钥匙时，其他任何人检查这种匹配的正确性就容易多了。 每一个被加进链的区块都会包含上一个区块的哈希值，任何试图篡改区块的节点需要同时改变该区块之后的所有区块，而每一个有效区块都需要进行上述配对运算，需要消耗大量的时间，在你篡改的同时，新的区块又在不断产生，篡改成本将会变得不可接受，从而保证了区块链中数据的可靠性和唯一性。 我的BTC地址：1K8ni4mnQn7VjFZKjHJHLPWZ55owG9J1jd]]></content>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[每一个不曾起舞的日子，都是对生命的辜负]]></title>
    <url>%2F%E6%AF%8F%E4%B8%80%E4%B8%AA%E4%B8%8D%E6%9B%BE%E8%B5%B7%E8%88%9E%E7%9A%84%E6%97%A5%E5%AD%90%EF%BC%8C%E9%83%BD%E6%98%AF%E5%AF%B9%E7%94%9F%E5%91%BD%E7%9A%84%E8%BE%9C%E8%B4%9F.html</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[1990年旅行者号回望地球]]></title>
    <url>%2F%E6%97%85%E8%A1%8C%E8%80%85%E5%8F%B7%E5%9B%9E%E6%9C%9B%E5%9C%B0%E7%90%83.html</url>
    <content type="text"><![CDATA[“就是这个小点。 就是这里，就是我们的家，就是我们。在这点上每个你爱的人、每个你认识的人、每个你曾经听过的人，以及每个曾经存在的人，都在那里过完一生。 这里集合了一切的欢喜与苦难，数千个自信的宗教、意识形态以及经济学说，每个猎人和搜寻者、每个英雄和懦夫、每个文明的创造者与毁灭者、每个国王与农夫、每对相恋中的年轻爱侣、每个充满希望的孩子、每对父母、发明家和探险家，每个教授道德的老师、每个贪污政客、每个超级巨星、每个至高无上的领袖、每个人类历史上的圣人与罪人，都住在这里——一粒悬浮在阳光下的微尘。” –Carl Sagan]]></content>
  </entry>
  <entry>
    <title><![CDATA[区块链之公有链、私有链及联盟链]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B9%8B%E5%85%AC%E6%9C%89%E9%93%BE%E3%80%81%E7%A7%81%E6%9C%89%E9%93%BE%E5%8F%8A%E8%81%94%E7%9B%9F%E9%93%BE.html</url>
    <content type="text"><![CDATA[区块链可以理解为一个保存在所有节点的分布式大账簿，开放性是其鲜明的特点，区块链中的任意节点均可查询每一笔交易信息。比特币即是如此，当然，每一个节点都是匿名的。随着区块链技术从比特币中被提炼出来，为适用于不同类型的应用场景，区块链又在原有比特币的公有链的基础上发展出了私有链以及两者的混合产物，即联盟链。 公有链是任何节点都是向全世界所有人开放的，任何人都可以参与进来，而且任何人都可以获得整个账簿。比特币以及目前很热的以太坊都是这一类型。公有链一般被认为是彻底的去中心化，节点与节点之间完全对等，没有任何节点可以操控网络。公有链的记账机制一般为代币机制，即对记账者进行奖励，鼓励记账。 但是有些应用场景，并不希望任何人都可以参与进来，只有被许可的节点才可以参与并且查看所有数据，记账权限往往由某个中心化的组织所控制，我们称之为私有链，其代表如目前的R3 Corda。公有链和私有链的关系好比开源技术和利用开源技术服务企业的公司。相比于公有链，私有链的交易速度更快，隐私得到了保护。私有链和目前主流的中心化的数据库技术的区别在于私有链有良好的溯源性，防止中心节点隐瞒或篡改整个账簿。私有链去中心化程度最低，也是目前金融机构研究的热点。 联盟链是类似于多中心化的私有链，每个中心都自带一个或多个节点。联盟链的每个参与者必须通过对方授权的密钥才能看到其他参与者的数据，在确保安全性和隐私保护的基础上实现了一定程度的去中心化，其典型如Hyperledger旗下的Fabric。联盟链是目前被认为是目前最具可操作性的技术，更容易得到各大机构的认可。]]></content>
  </entry>
  <entry>
    <title><![CDATA[渺远飞河]]></title>
    <url>%2F%E6%B8%BA%E8%BF%9C%E9%A3%9E%E6%B2%B3.html</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[区块链的阶段划分]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E9%98%B6%E6%AE%B5%E5%88%92%E5%88%86.html</url>
    <content type="text"><![CDATA[区块链技术随着比特币出现后，其应用随着进入领域的不同被划分了几个阶段，比较常见的是划分成三个阶段。 Blockchain 1.0：加密货币，即数位货币与支付系统去中心化，支撑去中心化交易和支付系统，以比特币为代表。由于其去中心化的鲜明特点，绕开了各国央行，并且由于其匿名性，在军火走私、洗钱、转移外汇及贩毒等得到广泛使用。所以包括中、美、英、印等国监管机构已经加强了相关监管，包括取缔等。 Blockchain2.0：智能合约，可以被理解为通过智能合约支撑行业应用，典型代表如以太坊和Fabric，目前主要应用领域集中于金融领域，如股票、债券等。智能合约即是当一个预先设定好的条件被触发时，智能合约自动执行相应的合同条款，区别于现实世界中需要法院及仲裁机构等强力机构。先行者纳斯达克已开始利用区块链技术进行私有股权发行交易。另外，四大事务所（德勤和普华永道）对于区块链技术在审计领域的应用探索是非常积极。 Blockchain 3.0：更复杂的智慧合约，即将区块链扩展用于金融以外人类生活的方方面面，如政府、医疗、科学与物流等各个领域，即支撑去中心化的社会体系，尚无成功的应用出现，但不成功的尝试目前有一个，如The DAO。利用区块链的“去信任”架构，各参与方无须信任对方就可以完成协作， 不再依靠某个第三人或机构获得信任或建立信用，提高整个系统的运转效率。 目前区块链还处于一个草创的阶段，还没有形成一个统一的标准，目前出现的类似以太坊等技术方案本身都是对区块链技术的摸索，还不是特别成熟，但已经取得很大突破。例如过去在比特币上出现的非常消耗资源和容量限制等瓶颈已经取得很大进展。]]></content>
  </entry>
  <entry>
    <title><![CDATA[渔唱晚舟]]></title>
    <url>%2F%E6%B8%94%E5%94%B1%E6%99%9A%E8%88%9F.html</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[区块链背后的关键技术]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E8%83%8C%E5%90%8E%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF.html</url>
    <content type="text"><![CDATA[区块链本质上是一种分布式数据库，其中存储的每一个区块都是一次交易信息，其核心思想主要有三条，一是去中心化，不存在任何中心机构和中心服务器，连它的创始人都没有出来过，实现节点与节点间的直接交互；二是开放和透明性，系统是完全开放透明的，账簿对所有人公开；三是不可篡改和不可撤销性，区块链采取单向哈希算法，每个新产生的区块严格按照时间线形顺序推进，具有不可篡改和不可撤销性。 区块链本质上是很多现有技术交叉融合在一起的集成创新。因此，要了解区块链，首先要了解区块链到底集成了哪些关键技术。区块链最初的产生也是源于解决一个30多年前由Leslie Lamport等提出的拜占庭将军问题。拜占庭将军问题是针对所谓的拜占庭失效来说的。而拜占庭失效是指分布式系统中的某一恶意节点允许做任意事情去干扰系统的正常运行（包括选择性不传递消息，选择性伪造消息等）。而拜占庭将军问题是研究如何在这样的失效下，整个系统不会出错和崩溃。在隐私安全方面，可回溯到1982年David Chaum提出注重隐私的密码学支付系统，该系统具有不可追踪的特性，成为比特币区块链在隐私安全面上的雏形。区块链中最关键的的共识机制目前有工作量证明机制、股权证明机制（PoS）、授权股权证明机制（DPoS）、拜占庭容错机制（BFT）及实用拜占庭容错机制（PBFT）等。比特币的区块链使用的工作量证明机制，则是采用由Adam Back在1997年所发明Hashcash（杂凑现金），这是第一代POW（Proof of Work）算法，即工作量证明演算法，解决了比特币网络中重复花费的问题，这个演算法最早被应用于阻挡垃圾邮件。1985年Neal Koblitz和Victor Miller分别提出著名的椭圆曲线密码学（Elliptic curve cryptography，ECC），由于此前发明的RSA的算法计算量过大很难实用， ECC的提出才真正使得非对称加密体系产生了实用的可能。区块链中每笔交易采用的椭圆曲线数位签章演算法（Elliptic Curve Digital Signature Algorithm，ECDSA）即由ECC演变而来。在21世纪初的几年，区块链底层领域又有了几次重大进展：首先是点对点分布式网络，然后，Napster、EDonkey 2000和BitTorrent先后出现，奠定了P2P网络计算的基础。P2P网络分为结构化的P2P网络和非结构化的P2P网络，前者能够自适应节点的动态加入/退出，有着良好的可扩展性、鲁棒性，而后者面对网络的动态变化具有较好的容错能力，因此可用性较好。比特币的区块链采用的是非结构化P2P网络，整个网络没有中心化的硬件或管理机构，任一节点既是服务端，也是客户端。任何节点只要安装相应的客户端软件，就能接入P2P网络。2001年，NSA发布了SHA-2系列算法，包括目前应用最广的SHA-256算法，而比特币的挖矿哈希散列算法采用的就是SHA-256算法。 我的BTC地址：1K8ni4mnQn7VjFZKjHJHLPWZ55owG9J1jd我的邮箱：mch200610@163.com]]></content>
      <tags>
        <tag>区块链 哈希算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人行天地间，忽如远行客]]></title>
    <url>%2F%E4%BA%BA%E8%A1%8C%E5%A4%A9%E5%9C%B0%E9%97%B4%EF%BC%8C%E5%BF%BD%E5%A6%82%E8%BF%9C%E8%A1%8C%E5%AE%A2.html</url>
    <content type="text"><![CDATA[]]></content>
      <tags>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[区块链是什么？]]></title>
    <url>%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.html</url>
    <content type="text"><![CDATA[区块链是现在很火的一个概念，甚至上升到了“可能是互联网被发明以来最重要的一次底层技术迭代”的程度，那区块链到底是什么呢？它有哪些特点？ 去中心化，去信用中介，降低信用成本等这几句话基本会出现在每一篇介绍区块链的文章当中，这也确实是区块链技术最具颠覆性和最有价值之处。关于信用中介和信用成本这里有一个形象的例子，如果有人告诉你现在大街上有一只老虎，你多半将信将疑，但如果是一个你十分相信的老者一脸真诚跟你说，街上现在来了一只老虎，现在不要上街，你多半就信了，如果不是老者，而是一群人和你说现在街上有一只老虎，你大概率上肯定是信的。现在不是老虎了，如果有人找你借钱，你担心借钱不还，这个时候有一个大家都信赖的中间人跑过来说我来担保这笔借款，你就会很放心，换种方式，这个时候来了一群人说他们都看到了这笔交易，这个时候，对方赖账的几率就会小很多。金融业就类似前面提到的大家都信赖的中间人，但我们普通大众要为此付出庞大的信用成本，这也才造成金融业是目前最赚钱的行业。而后者就是类似区块链这种去中心化的，降低信用成本的解决方案，其目的就在于解决互联网世界中的彼此信任问题。 提及区块链，总会谈到比特币，两者初期确实是一种相伴相生的关系。比特币是一种数字虚拟加密货币，区块链最初是作为比特币的一种底层技术存在。比特币的每笔交易就遵循区块链的基本原理，每一笔比特币的交易都会在全网进行广播，并发送至全网的每一个节点，这里的节点又称为矿工，矿工收到广播信息后将会进行记录，记录就是对交易的确认，这一记录一旦记录，不可篡改，不可撤销。为什么叫矿工呢，系统对最先进行记录的节点奖励25个比特币(这个奖励数量，系统设定每4年减半)，而判定谁最先记录用的是解一道运算题，谁能最快解出值，谁就将获得记录入账权利，并赢得奖励，这也就是俗称的“挖矿”。这里讲的运算题被称为哈希散列算法，这一算法可以用来验证有没有人篡改数据内容。获得记账权的矿工获得相应的记账奖励并向网络中全部节点广播该区块，其他节点则开始校验区块内的小纸条信息是否真实有效等等。这里的记录就是一个区块，并且每一笔记录都会加上一个时间戳形成一个不可篡改的时间链条，所以又叫做区块链。]]></content>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一个图片：晴夏夕晚]]></title>
    <url>%2F%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9B%BE%E7%89%87.html</url>
    <content type="text"><![CDATA[]]></content>
      <tags>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018,new start!]]></title>
    <url>%2F2018-new-start.html</url>
    <content type="text"><![CDATA[你好2018年，又是一个新的开始，时间流转，看似循环往复，但成长就在点滴之中，结硬寨，打呆仗，给自己加加油！]]></content>
      <tags>
        <tag>2018</tag>
      </tags>
  </entry>
</search>
